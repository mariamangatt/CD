#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<ctype.h>
 
int isKeyword(char buffer[]){
char keywords[32][10] = {"auto","break","case","char","const","continue","default","do","double","else","enum","extern","float","for","goto","if","int","long","register","return","short","signed","sizeof","static","struct","switch","typedef","union",
"unsigned","void","volatile","while"};
int i, flag = 0;
for(i = 0; i < 32; ++i){
if(strcmp(keywords[i], buffer) == 0){
flag = 1;
break;
}

return flag;
}
 
int main(){
char ch,ch1,ch2, buffer[15], operators[] = "+-*/%=";
FILE *fp,*fp1;
int i,j=0;
fp = fopen("text.c","r");
fp1 = fopen("text.c","r");
if(fp == NULL){
printf("error while opening the file\n");
exit(0);
}
ch2=fgetc(fp1);
while((ch = fgetc(fp)) != EOF){
   ch2=fgetc(fp1);
   for(i = 0; i < 6; ++i){
   if(ch == operators[i])
   {
   if(ch=='='&&ch2=='=')
   printf("== is relational operator\n");
   else
   printf("%c is operator\n", ch);
   }
   }
   
   if(ch=='>'||ch=='<')
   {
	if(ch2=='='||ch2=='>'){
	printf("%c%c is relational operator\n",ch,ch2);
	ch=fgetc(fp);
	ch2=fgetc(fp1);
	}
	else
	printf("%c is relational operator\n",ch);
   }
   if(isalnum(ch)){
   buffer[j++] = ch;
   }
   else if(ch=='#'||ch=='/')
   {
   while(ch!='\n')
   {
   ch=fgetc(fp);
   }
   }
   else if((ch == ' ' || ch == '\n'||ch==','||ch=='+'||ch=='-'||ch=='*'||ch=='/'||ch=='='||ch=='>'||ch=='<'||ch=='('||ch==')') && (j != 0)){
   buffer[j] = '\0';
   j = 0;
   if(ch=='='&&ch2=='=')
   printf("== is relational operator");
   
   if(isKeyword(buffer) == 1)
   printf("%s is keyword\n", buffer);
 
   else
   printf("%s is identifier\n", buffer);
   }
 }
fclose(fp);
return 0;
}
